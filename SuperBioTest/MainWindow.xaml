<Window x:Class="SuperBioTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SuperBioTest"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="500"
        d:DataContext="{d:DesignInstance {x:Type local:MainViewModel}}">
    <Window.Resources>
        <!--une ressource locale à la fenêtre-->
        <!--<DropShadowEffect x:Key="shadowGridSplitterEffect" BlurRadius="10" Color="Black" ShadowDepth="10"/>-->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="10 10" />
            <Setter Property="Padding" Value="5 3" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Effect" Value="{DynamicResource shadowGridSplitterEffect}" />
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Template" Value="{DynamicResource ButtonTemplateRadius}"/>
        </Style>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="ButtonTemplateRadius" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" 
                    CornerRadius="8"
                    Background="{TemplateBinding Background}" 
                    BorderThickness="2" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">
                <StackPanel Orientation="Horizontal">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="5 0 0 0" VerticalAlignment="Center" >
                        <Image Source="/images/seringue.png" Width="15"  Margin="0" />
                    </Border>
                    <!--le ContentPresenter a pour role d'afficher le Content du bouton-->
                    <ContentPresenter x:Name="contentPresenter" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" 
                            TargetName="border" 
                            Value="{DynamicResource {x:Static 
                        SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate x:Key="reagentsListBoxItemTemplate">
            <!--Avec ItemsSource="{Binding }" on se lie à l'objet courant de la ligne
            L'objet courant est une liste de reactifs-->
            <ItemsControl ItemsSource="{Binding }" 
                          ItemTemplate="{DynamicResource reagentTemplate}" >
                <!--On change le ItemsPanel du ItemsControl
                pour changer la disposition des enfants(horizontale)-->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="reagentTemplate">
            <TextBlock Text="X" />
        </DataTemplate>
    </Window.Resources>
    <Grid x:Name="gridContent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ListBox ItemTemplate="{DynamicResource reagentsListBoxItemTemplate}" 
                 x:Name="listBoxRacks"
                 Background="#FFBECCCD" Margin="10"
                 ItemsSource="{Binding ReagentRacks}" />
        <GridSplitter Effect="{DynamicResource shadowGridSplitterEffect}" Grid.Column="1" 
                      HorizontalAlignment="Center" Width="10" >
            <GridSplitter.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF111129"/>
                    <GradientStop Color="#FF111E94" Offset="0.226"/>
                    <GradientStop Color="#FFACD9E8" Offset="1"/>
                    <GradientStop Color="#FF2DCEF2" Offset="0.778"/>
                    <GradientStop Color="#FF153DA4" Offset="0.385"/>
                </LinearGradientBrush>
            </GridSplitter.Background>
        </GridSplitter>
        <Grid x:Name="gridRight" Grid.Column="2" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="gridActions" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button  Content="Tester" />
                <Button Content="Lancer Run" Grid.Row="1" />
                <Button Template="{DynamicResource roundedButtonTemplate}" Content="Voir alertes" Grid.Row="2" />
            </Grid>
            <ListBox Margin="0,10,0,10" Grid.Column="1"/>
        </Grid>
    </Grid>
</Window>
